[tool.poetry]
name = "modeStep"
version = "0.1.0"
description = "Ableton Live 12 control surface for the SoftStep 2"
authors = ["Kevin Montag <kmontag@cs.stanford.edu>"]
readme = "README.md"

# Use poetry only for dependency management, not packaging (as the application doesn't
# need to be packaged).
package-mode = false

[tool.poetry.dependencies]
# Live's built-in python version as of 12.1.
python = "^3.11"

# Packages available at runtime in Live's "site-packages" folder.
future = "0.18.3"

# Dependencies for testing and build tasks. These won't be available at runtime in Live.
[tool.poetry.group.dev.dependencies]
# Thread-safe asyncio-aware queue, used to process MIDI messages in tests.
janus = "^2.0.0"

# MIDI input/output for tests.
mido = "^1.3.2"
python-rtmidi = "^1.5.2"

# Type checker.
pyright = "^1.1.348"

# Test framework.
pytest = "^8.3.4"
pytest-asyncio = "^0.25.0"
pytest-bdd = "^8.1.0"

# Pretty printer for tests.
rich = "^13.7.0"

# Formatter and linter
ruff = "^0.8.0"

# Used to generate images for the README.
svgwrite = "^1.4.2"

# Runtime typechecking, used for validating test method arguments.
typeguard = "^4.4.1"

# Backport post-python3.7 typing extensions. This can't be imported at runtime, but can
# be used in .pyi files or with the TYPE_CHECKING variable.
typing-extensions = "^4.7.0"

[tool.pyright]
# Live's built-in python version as of v12.1 is 3.11.6.
pythonVersion = "3.11"

exclude = ["**/__pycache__", ".git", ".venv", "__ext__/"]
extraPaths = ["./__ext__/AbletonLive12_MIDIRemoteScripts"]

# Suppress warnings about the Live module not existing.
reportMissingModuleSource = false

# Set up the virtual environment.
venvPath = "."
venv = ".venv"

[tool.ruff]
target-version = "py311"
# Exclude generated libs.
extend-exclude = ["__ext__"]

[tool.ruff.lint]
# - ARG: unused arguments
# - B: flake8-bugbear
# - E: pycodestyle errors
# - I: import sorting
# - W: pycodestyle warnings
extend-select = ["ARG", "B", "E", "I", "W"]
# Turn off strict max line length; B950 allows for exceeding the max
# line length in some cases.
extend-ignore = ["E501"]

[tool.ruff.lint.isort]
# Explicitly specify Live as a standard library to avoid potential
# inconsistencies across systems when sorting imports.
extra-standard-library = ["Live"]

[tool.semantic_release]
major_on_zero = false
allow_zero_version = true
version_toml = [
  "pyproject.toml:tool.poetry.version",
]
